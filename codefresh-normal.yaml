#
# Normal Change requires approval
#
version: '1.0'
stages:
  - clone
  - build
  - dev
  - prod
  - post

steps:

  init:
    type: parallel
    stage: clone
    steps:
      clone:
        title: Cloning repository
        type: git-clone
        git: github
        repo: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
        revision: ${{CF_REVISION}}
        stage: clone

      calculateDate:
        image: ubuntu:latest
        stage: prod
        commands:
          - |
            START_DATE=`date -u '+%Y-%m-%d %H:%M:%S'`
            END_DATE=`date -u -d '+1 day' '+%Y-%m-%d %H:%M:%S'`
            echo START_DATE=\"$START_DATE\" >> ${{CF_VOLUME_PATH}}/env_vars_to_export
            echo  END_DATE=\"$END_DATE\" >> ${{CF_VOLUME_PATH}}/env_vars_to_export

  getVersion:
    title: "Get the image version from the repo"
    image: codefresh/cli
    working_directory: "${{clone}}"
    stage: build
    commands:
      - |
        export VERSION=$(cat version.txt | tr -d '\n')
        cf_export IMAGE_VERSION=$VERSION
        cf_export IMAGE=lrochette/globex:$VERSION

  build_application:
    title: "Building Globex website"
    image: maven:3.3-jdk-8
    working_directory: "${{clone}}"
    tag: "${{CF_BRANCH_TAG_NORMALIZED}}"
    commands:
      - mvn -Dmaven.repo.local=/codefresh/volume/m2_repository package
    stage: build

  build_image:
    title: "Building tomcat container"
    type: build
    registry: docker
    image_name: "lrochette/globex"
    working_directory: "${{clone}}"
    tags:
      - "${{CF_BRANCH_TAG_NORMALIZED}}"
      - ${{IMAGE_VERSION}}
    dockerfile: "Dockerfile"
    disable_push: false
    stage: build
    on_success:
      annotations:
        set:
          - annotations:
            - sha: ${{CF_SHORT_REVISION}}
            - version: ${{IMAGE_VERSION}}
            display: version
  jira:
    type: parallel
    stage: build
    fail_fast: false
    when:
      condition:
        all:
          quick: '"${{QUICK}}" != "true"'
    steps:
      jira-issue-extractor:
        title: Enrich image with annotations
        type: jira-issue-extractor:1.2.4
        stage: "build"
        arguments:
          IMAGE: 'docker.io/lrochette/globex:${{CF_SHORT_REVISION}}'
          JIRA_PROJECT_PREFIX: 'FT'
          MESSAGE: '${{CF_COMMIT_MESSAGE}}'
          JIRA_API_TOKEN: ${{JIRA_API_KEY}}
          JIRA_EMAIL: ${{JIRA_USER}}
          JIRA_HOST: ${{JIRA_URL}}
          #JIRA_CONTEXT: jira

      JiraCommentCreate:
        title: "Add Jira Comment"
        type: jira-issue-manager:1.0.13
        fail_fast: false
        arguments:
          JIRA_API_KEY: ${{JIRA_API_KEY}}
          JIRA_BASE_URL: ${{JIRA_URL}}
          JIRA_USERNAME: ${{JIRA_USER}}
          JIRA_ISSUE_SOURCE_FIELD: 'FT-50'
          ACTION: "comment_create"
          COMMENT_BODY: "Build to change location in Codefresh build [${{CF_BUILD_ID}}|${{CF_BUILD_URL}}] finished in Codefresh."

      enrich-image:
        title: Enrich image with annotations
        type: image-enricher:1.3.3
        stage: test
        arguments:
          IMAGE: 'lrochette/globex:${{CF_SHORT_REVISION}}'
          BRANCH: '${{CF_BRANCH}}'
          REPO: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
          GIT_PROVIDER_NAME: github


  clone_dev:
    title: Cloning Gitops repository
    type: git-clone
    git: github
    repo: ${{CF_REPO_OWNER}}/csdp_applications
    revision: main
    stage: dev
    when:
      condition:
        all:
          quick: '"${{QUICK}}" != "true"'

  updateVersion_dev:
    title: update the version of the image
    stage: dev
    image: codefresh/cli
    working_directory: "${{clone_dev}}/kustomize/globex/overlays/dev"
    commands:
      - ls
      - yq -iY '.spec.template.spec.containers[0].image=env.IMAGE' deployment.yaml
    when:
      condition:
        all:
          quick: '"${{QUICK}}" != "true"'

  GitCommit_dev:
    title: Commit new image version to Git
    stage: dev
    type: git-commit:0.1.4
    arguments:
      repo: ${{CF_REPO_OWNER}}/csdp_applications
      git: github
      working_directory: "/codefresh/volume/csdp_applications/kustomize/globex/overlays/dev"
      commit_message: "update image to ${{IMAGE_VERSION}}"
      git_user_name: lrochette
      git_user_email: laurent.rochette@codefresh.io
      allow_empty: true
      rebase: true
      force_push: true
      add:
        - deployment.yaml
    when:
      condition:
        all:
          quick: '"${{QUICK}}" != "true"'

  startDemo:
    stage: dev
    description: "Wait for demo"
    type: pending-approval
    timeout:
      duration: 24
      timeUnit: hours
      finalState: denied
    when:
      condition:
        all:
          quick: '"${{QUICK}}" != "true"'

  createCR:
    type: service-now:${{SN_VERSION}}
    title: Create Service Now Change Request
    stage: prod
    arguments:
      CR_ACTION: createCR
      DEBUG: true
      SN_USER: admin
      SN_PASSWORD: '${{SN_PASSWORD}}'
      SN_INSTANCE: ${{SN_INSTANCE}}
      # STD_CR_TEMPLATE: ""
      TOKEN: ${{CF_TOKEN}}
      CR_CONFLICT_POLICY: ignore
      CR_DATA: >-
        {
          "short_description": "Application deployment to Prod",
          "description": "Change for build ${{CF_BUILD_ID}}\nThis change was created by the Codefresh plugin",
          "justification": "I do not need a justification\nMy app is awesome",
          "cmdb_ci":"tomcat",
          "start_date":${{START_DATE}},
          "end_date":${{END_DATE}},
          "assignment_group":"a715cd759f2002002920bde8132e7018"
        }

  approval:
    stage: prod
    description: "Approval to deploy to PROD"
    type: pending-approval
    timeout:
      duration: 2
      timeUnit: hours
      finalState: denied

  modifyCR:
    stage: prod
    title: "Modify the implementation plan"
    type: service-now:${{SN_VERSION}}
    fail_fast: false
    arguments:
      CR_ACTION: updateCR
      CR_SYSID: ${{CR_SYSID}}
      SN_USER: admin
      SN_PASSWORD: '${{SN_PASSWORD}}'
      SN_INSTANCE: ${{SN_INSTANCE}}
      CR_DATA: '{"implementation_plan":"The implementation has been approved."}'

  updateVersion_prod:
    title: update the version of the image for prod deployment
    stage: prod
    image: codefresh/cli
    working_directory: "${{clone_dev}}/kustomize/globex/overlays/prod"
    commands:
      - ls
      - yq -iY '.spec.template.spec.containers[0].image=env.IMAGE' deployment.yaml
    when:
      condition:
        all:
          quick: '"${{QUICK}}" != "true"'

  GitCommit_prod:
    title: Commit new image version to Git
    stage: prod
    type: git-commit:0.1.4
    arguments:
      repo: ${{CF_REPO_OWNER}}/csdp_applications
      git: github
      working_directory: "/codefresh/volume/csdp_applications/kustomize/globex/overlays/prod"
      commit_message: "update image to ${{IMAGE_VERSION}}"
      git_user_name: lrochette
      git_user_email: laurent.rochette@codefresh.io
      allow_empty: true
      rebase: true
      force_push: true
      add:
        - deployment.yaml
    when:
      condition:
        all:
          quick: '"${{QUICK}}" != "true"'

  modifyTestPlan:
    stage: post
    title: "Modify the test plan"
    type: service-now:${{SN_VERSION}}
    fail_fast: false
    arguments:
      CR_ACTION: updateCR
      CR_SYSID: ${{CR_SYSID}}
      SN_USER: admin
      SN_PASSWORD: '${{SN_PASSWORD}}'
      SN_INSTANCE: ${{SN_INSTANCE}}
      CR_DATA: '{"test_plan":"The testing suite has passed."}'

  # wait2:
  #   stage: post
  #   title: are we ready to close?
  #   type: pending-approval
  #   timeout:
  #     duration: 30
  #     timeUnit: minutes
  #     finalState: approved

  review:
    type: service-now:${{SN_VERSION}}
    stage: "post"
    fail_fast: false
    arguments:
      CR_ACTION: updateCR
      CR_SYSID: ${{CR_SYSID}}
      CR_NUMBER: ${{CR_NUMBER}}
      SN_USER: admin
      SN_PASSWORD: '${{SN_PASSWORD}}'
      SN_INSTANCE: '${{SN_INSTANCE}}'
      CR_DATA: '{"state":"0"}'

  closeCR:
    type: service-now:${{SN_VERSION}}
    title: Close Service Now Change Request
    stage: post
    arguments:
      CR_ACTION: closeCR
      CR_SYSID: ${{CR_SYSID}}
      SN_USER: admin
      SN_PASSWORD: '${{SN_PASSWORD}}'
      SN_INSTANCE: ${{SN_INSTANCE}}
      CR_CLOSE_CODE: "successful"
      CR_CLOSE_NOTES: "Closed automatically by Codefresh build ${{CF_BUILD_ID}}"
      CR_DATA: '{"work_notes":"this is a message for the work notes"}'
